# 서비스의 동작 원리

우리가 사용하고 서비스들은 한 덩어리로 있는 것이 아니라 여러 조작으로 나누어져 서로 맞물려 동작하고 있다.

웹사이트, 앱, 게임, 데이터 사이언스에서는 클라이언트와, 서버로 나뉘어 있는 구조이다.

클라이언트 (웹개발 기준)
웹개발에서 클라이언트는 크롬이나 사파리 같은 브라우저이다.
브라우저가 우리한테 웹사이트를 보여주기 위해서는 HTML, CSS, JavaScript가 필요하다.
HTML: 어떤 내용이 어디에 들어갈지 이미지, 글자, 버튼 같은게 어디에 들어갈지 정해줌
CSS: 크기, 색깔, 테두리 선의 굵기, 그림자 이러한 스타일을 입혀줌
JavaScript: 클릭, 스크롤, 유저 동작에 따라 사이트가 어떻게 반응할지 정해줌 (영상 플레이 버튼을 누르면 영상이 재생되거나, 자막버튼을 누르면 영상에 자막이 뜨거나 등)

위 의 3개의 코드들로 내 로컬에 있으면 바로 띄울 수 있지만 로딩시간이 걸린다 그렇다면 이러한 코드들은 어디서 오는걸까?

서버 (웹개발 기준)
웹사이트를 보여주기 위해 필요한 코드는 서버에서 온다. 서버도 하나의 컴퓨터이다. 
예를 들어 유튜브는 구글이라는 회사 것인데 구글이 유튜브를 위해 항상 켜 놓는 서버 컴퓨터가 있기 때문에 우리가 언제든지 유튜브를 들어 갈 수 있다.
우리가 유튜브를 들어가고 싶다고 요청 하면 유튜브의 서버컴퓨터가 사본식으로 된 3개의 코드들을 보내준다.
(데이터베이스)
클라이언트가 새로운 정보를 올리면 클라이언트 로컬에 저장되는 것이 아니라 서버에게 저장해 달라고 요청을 하여 데이터베이스에 새로운 정보를 저장한다.

클라이언트가 서버로부터 사이트를 어떻게 받는 것인가?
브라우저를 켜고 주소창에 주소를 입력하고 엔터를 치면 이 주소를 DNS라는 인터넷 주소록 같은데서 찾아보게 된다.
DNS에서는 우리가 입력한 주소가 IP주소를 가르키고 있다.
이러한 IP주소가 서버 컴퓨터의 위치를 찾아낸다. (IP주소를 외울 수 없으니 쉬운 도메인을 만들었다.)
위치를 알아낸 서버 컴퓨터에게 사이트를 달라 요청하면 3개의 코드를 준다.
브라우저가 이 코드를 해석해서 유저에게 보여진다.

클라이언트는 사이트를 쓰는 중에도 서버에게 계속해서 요청할 수 있다.
